<?xml version="1.0" encoding="UTF-8" ?>
<class name="Popup" inherits="Window" version="4.0">
	<brief_description>
		Base container control for popups and dialogs.
	</brief_description>
	<description>
		Popup is a base [Control] used to show dialogs and popups. It's a subwindow and modal by default (see [Control]) and has helpers for custom popup behavior.
	</description>
	<tutorials>
	</tutorials>
	<methods>
	</methods>
	<members>
<<<<<<< HEAD
		<member name="popup_exclusive" type="bool" setter="set_exclusive" getter="is_exclusive" default="false">
			If [code]true[/code], the popup will not be hidden when a click event occurs outside of it, or when it receives the [code]ui_cancel[/code] action event.
			[b]Note:[/b] Enabling this property doesn't affect the Close or Cancel buttons' behavior in dialogs that inherit from this class. As a workaround, you can use [method WindowDialog.get_close_button] or [method ConfirmationDialog.get_cancel] and hide the buttons in question by setting their [member CanvasItem.visible] property to [code]false[/code].
=======
		<member name="borderless" type="bool" setter="set_flag" getter="get_flag" override="true" default="true" />
		<member name="close_on_parent_focus" type="bool" setter="set_close_on_parent_focus" getter="get_close_on_parent_focus" default="true">
>>>>>>> 5d9cab3aeb3c62df6b7b44e6e68c0ebbb67f7a45
		</member>
		<member name="transient" type="bool" setter="set_transient" getter="is_transient" override="true" default="true" />
		<member name="unresizable" type="bool" setter="set_flag" getter="get_flag" override="true" default="true" />
		<member name="visible" type="bool" setter="set_visible" getter="is_visible" override="true" default="false" />
		<member name="wrap_controls" type="bool" setter="set_wrap_controls" getter="is_wrapping_controls" override="true" default="true" />
	</members>
	<signals>
		<signal name="popup_hide">
			<description>
				Emitted when a popup is hidden.
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
</class>
