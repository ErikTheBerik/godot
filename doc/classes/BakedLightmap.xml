<?xml version="1.0" encoding="UTF-8" ?>
<class name="BakedLightmap" inherits="VisualInstance3D" version="4.0">
	<brief_description>
	</brief_description>
	<description>
<<<<<<< HEAD
		Baked lightmaps are an alternative workflow for adding indirect (or baked) lighting to a scene. Unlike the [GIProbe] approach, baked lightmaps work fine on low-end PCs and mobile devices as they consume almost no resources in run-time.
		[b]Note:[/b] This node has many known bugs and will be [url=https://godotengine.org/article/godot-40-will-get-new-modernized-lightmapper]rewritten for Godot 4.0[/url]. See [url=https://github.com/godotengine/godot/issues/30929]GitHub issue #30929[/url].
	</description>
	<tutorials>
		<link>https://docs.godotengine.org/en/3.2/tutorials/3d/baked_lightmaps.html</link>
	</tutorials>
	<methods>
		<method name="bake">
			<return type="int" enum="BakedLightmap.BakeError">
			</return>
			<argument index="0" name="from_node" type="Node" default="null">
			</argument>
			<argument index="1" name="create_visual_debug" type="bool" default="false">
			</argument>
			<description>
				Bakes the lightmaps within the currently edited scene. Returns a [enum BakeError] to signify if the bake was successful, or if unsuccessful, how the bake failed.
			</description>
		</method>
		<method name="debug_bake">
			<return type="void">
			</return>
			<description>
				Executes a dry run bake of lightmaps within the currently edited scene.
			</description>
		</method>
=======
	</description>
	<tutorials>
	</tutorials>
	<methods>
>>>>>>> 5d9cab3aeb3c62df6b7b44e6e68c0ebbb67f7a45
	</methods>
	<members>
		<member name="bias" type="float" setter="set_bias" getter="get_bias" default="0.0005">
		</member>
		<member name="bounces" type="int" setter="set_bounces" getter="get_bounces" default="1">
		</member>
		<member name="directional" type="bool" setter="set_directional" getter="is_directional" default="false">
		</member>
		<member name="environment_custom_color" type="Color" setter="set_environment_custom_color" getter="get_environment_custom_color">
		</member>
		<member name="environment_custom_energy" type="float" setter="set_environment_custom_energy" getter="get_environment_custom_energy">
		</member>
		<member name="environment_custom_sky" type="Sky" setter="set_environment_custom_sky" getter="get_environment_custom_sky">
		</member>
		<member name="environment_mode" type="int" setter="set_environment_mode" getter="get_environment_mode" enum="BakedLightmap.EnvironmentMode" default="0">
		</member>
		<member name="generate_probes_subdiv" type="int" setter="set_generate_probes" getter="get_generate_probes" enum="BakedLightmap.GenerateProbes" default="0">
		</member>
		<member name="interior" type="bool" setter="set_interior" getter="is_interior" default="false">
		</member>
		<member name="light_data" type="BakedLightmapData" setter="set_light_data" getter="get_light_data">
		</member>
		<member name="max_texture_size" type="int" setter="set_max_texture_size" getter="get_max_texture_size" default="16384">
		</member>
		<member name="quality" type="int" setter="set_bake_quality" getter="get_bake_quality" enum="BakedLightmap.BakeQuality" default="1">
		</member>
		<member name="use_denoiser" type="bool" setter="set_use_denoiser" getter="is_using_denoiser" default="true">
		</member>
	</members>
	<constants>
		<constant name="BAKE_QUALITY_LOW" value="0" enum="BakeQuality">
		</constant>
		<constant name="BAKE_QUALITY_MEDIUM" value="1" enum="BakeQuality">
		</constant>
		<constant name="BAKE_QUALITY_HIGH" value="2" enum="BakeQuality">
		</constant>
		<constant name="BAKE_QUALITY_ULTRA" value="3" enum="BakeQuality">
		</constant>
		<constant name="GENERATE_PROBES_DISABLED" value="0" enum="GenerateProbes">
		</constant>
		<constant name="GENERATE_PROBES_SUBDIV_4" value="1" enum="GenerateProbes">
		</constant>
		<constant name="GENERATE_PROBES_SUBDIV_8" value="2" enum="GenerateProbes">
		</constant>
		<constant name="GENERATE_PROBES_SUBDIV_16" value="3" enum="GenerateProbes">
		</constant>
		<constant name="GENERATE_PROBES_SUBDIV_32" value="4" enum="GenerateProbes">
		</constant>
		<constant name="BAKE_ERROR_OK" value="0" enum="BakeError">
			Baking was successful.
		</constant>
<<<<<<< HEAD
		<constant name="BAKE_ERROR_NO_SAVE_PATH" value="1" enum="BakeError">
			Returns if no viable save path is found. This can happen where an [member image_path] is not specified or when the save location is invalid.
		</constant>
		<constant name="BAKE_ERROR_NO_MESHES" value="2" enum="BakeError">
			Currently unused.
		</constant>
		<constant name="BAKE_ERROR_CANT_CREATE_IMAGE" value="3" enum="BakeError">
			Returns when the baker cannot save per-mesh textures to file.
		</constant>
		<constant name="BAKE_ERROR_USER_ABORTED" value="4" enum="BakeError">
			Returns if user cancels baking.
=======
		<constant name="BAKE_ERROR_NO_LIGHTMAPPER" value="1" enum="BakeError">
		</constant>
		<constant name="BAKE_ERROR_NO_SAVE_PATH" value="2" enum="BakeError">
		</constant>
		<constant name="BAKE_ERROR_NO_MESHES" value="3" enum="BakeError">
		</constant>
		<constant name="BAKE_ERROR_MESHES_INVALID" value="4" enum="BakeError">
		</constant>
		<constant name="BAKE_ERROR_CANT_CREATE_IMAGE" value="5" enum="BakeError">
		</constant>
		<constant name="BAKE_ERROR_USER_ABORTED" value="6" enum="BakeError">
		</constant>
		<constant name="ENVIRONMENT_MODE_DISABLED" value="0" enum="EnvironmentMode">
		</constant>
		<constant name="ENVIRONMENT_MODE_SCENE" value="1" enum="EnvironmentMode">
		</constant>
		<constant name="ENVIRONMENT_MODE_CUSTOM_SKY" value="2" enum="EnvironmentMode">
		</constant>
		<constant name="ENVIRONMENT_MODE_CUSTOM_COLOR" value="3" enum="EnvironmentMode">
>>>>>>> 5d9cab3aeb3c62df6b7b44e6e68c0ebbb67f7a45
		</constant>
	</constants>
</class>
